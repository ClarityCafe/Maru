version: 2
notify:
  webhooks:
    - url: https://circledisc-clarity.herokuapp.com/webhook/circle

jobs:
  prebuild_amd64:
    machine: 
      image: ubuntu-1604:201903-01
    environment:
      CHROMEOS_STABILIZE_VERSION: release-R75-12105.B 
      BOARD_ARCH: amd64
    steps:
      - checkout 
      - run:
         name: Checkout Chromium OS Source code
         command: .ci/setup-env
      - run:
          name: CROS_SDK -  Walk to CrOS directory and Setup Board
          command: |
            export PATH=/usr/local/repo/depot_tools:$PATH;
            cp -vRf ./overlay-* build/chromiumos-$CHROMEOS_STABILIZE_VERSION/src/overlays/
            cd build/chromiumos-$CHROMEOS_STABILIZE_VERSION
            cros_sdk --download -- setup_board --board=maru-$BOARD_ARCH;
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - build

  packagebuild_amd64:
    machine: 
      image: ubuntu-1604:201903-01
    environment:
      CHROMEOS_STABILIZE_VERSION: release-R75-12105.B 
      BOARD_ARCH: amd64
    steps:
      - attach_workspace:
          at: /home/circleci/project/build
      - run:
         name: Setup environment
         command: wget -qO - https://git.io/Je3Q6 | sh
      - run:
          name: CROS_SDK -  Build Packages
          command: |
            export PATH=/usr/local/repo/depot_tools:$PATH;
            cd build/chromiumos-*
            cros_sdk --download -- ./build_packages --board=maru-$BOARD_ARCH;
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - build

  postbuild_amd64:
    machine: 
      image: ubuntu-1604:201903-01
    environment:
      CHROMEOS_STABILIZE_VERSION: release-R75-12105.B 
      BOARD_ARCH: amd64
    steps:
      - attach_workspace:
          at: /home/circleci/project/build
      - run:
         name: Setup environment
         command: wget -qO - https://git.io/Je3Q6 | sh
      - run:
          name: CROS_SDK -  Build Image
          command: |
            export PATH=/usr/local/repo/depot_tools:$PATH;
            cd build/chromiumos-*
            cros_sdk --download -- ./build_image --board=maru-$BOARD_ARCH;
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - build

  nightly_deploy_amd64:
    machine: 
      image: ubuntu-1604:201903-01 
    environment:
      CHROMEOS_STABILIZE_VERSION: release-R75-12105.B 
      BOARD_ARCH: amd64
    steps:
      - attach_workspace:
          at: /home/circleci/project/build
      - run:
         name: Setup environment
         command: wget -qO - https://git.io/Je3Q6 | sh
      - run:
          name: Package Image for distribution
          command: |
            export PATH=/usr/local/repo/depot_tools:$PATH;
            tar -czvf $HOME/maru-image-amd64-nightly.tgz build/chromiumos-*/src/build/images/maru-$BOARD_ARCH
      - store_artifacts:
          path: /home/circleci/maru-image-amd64-nightly.tgz

  deploy_amd64:
    machine: 
      image: ubuntu-1604:201903-01
    environment:
      CHROMEOS_STABILIZE_VERSION: release-R75-12105.B 
      BOARD_ARCH: amd64
    steps:
      - attach_workspace:
          at: /home/circleci/project/build
      - run:
         name: Setup environment
         command: wget -qO - https://git.io/Je3Q6 | sh
      - run:
          name: Package Image for distribution
          command: |
            export PATH=/usr/local/repo/depot_tools:$PATH;
            tar -czvf $HOME/maru-image.tgz build/chromiumos-*/src/build/images/maru-$BOARD_ARCH

workflows:
  version: 2
  untagged-build:
    jobs:
      - prebuild_amd64
      - packagebuild_amd64:
          requires: 
            - 'prebuild_amd64'
      - postbuild_amd64:
          requires:
            - 'packagebuild_amd64'
      - nightly_deploy_amd64:
          requires:
            - 'postbuild_amd64'

  tagged-build:
    jobs:
      - prebuild_amd64:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /release-R[0-9]{2}-[0-9]{5}\.B/

      - packagebuild_amd64:
          requires: 
            - 'prebuild_amd64'
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /release-R[0-9]{2}-[0-9]{5}\.B/
      - postbuild_amd64:
          requires:
            - 'packagebuild_amd64'
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /release-R[0-9]{2}-[0-9]{5}\.B/

      - deploy_amd64:
          requires: 
            - 'postbuild_amd64'
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /release-R[0-9]{2}-[0-9]{5}\.B/
